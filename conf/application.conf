//db = {
//  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
//  properties = {
//    databaseName = "kc_db"
//    user = "kc_web"
//    password = "database"
////    ??
////    driver = "slick.driver.PostgresDriver$"
////    url = "postgres://user:pass@host/dbname"
//  }
//  numThreads = "10"
//}

# Default database configuration
//slick.dbs.default.driver="slick.driver.H2Driver$"
//slick.dbs.default.db.dataSourceClass = "slick.jdbc.DatabaseUrlDataSource"
//slick.dbs.default.db.driver="org.h2.Driver"
//slick.dbs.default.db.user="postgres"
//slick.dbs.default.db.password="database"
//slick.dbs.default.db.url="jdbc:postgres://127.0.0.1:5432/kc_db"
slick.dbs.default.driver="slick.driver.PostgresDriver$"
slick.dbs.default.db.driver="org.postgresql.Driver"
slick.dbs.default.db.url="jdbc:postgresql://127.0.0.1:5432/kc_db"
slick.dbs.default.db.user="postgres"
slick.dbs.default.db.password="database"

logger.scala.slick=DEBUG

akka {
    actor {
      default-dispatcher {
        fork-join-executor {
          # Settings this to 1 instead of 3 seems to improve performance.
          parallelism-factor = 3.0

          # @richdougherty: Not sure why this is set below the Akka
          # default.
          parallelism-max = 24

          # Setting this to LIFO changes the fork-join-executor
          # to use a stack discipline for task scheduling. This usually
          # improves throughput at the cost of possibly increasing
          # latency and risking task starvation (which should be rare).
          task-peeking-mode = LIFO
        }
      }
    }
}



# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret="=VZ_OZn@l<ZQEp]]A?oXiyIYQsXTy^oqc<d1hW<bNqK@;dL^;l0<><VpvZY^CE_N"

# The application languages
# ~~~~~
application.langs="en"

play.http.session.cookieName = "KC_SESSION"
play.http.session.maxAgeSecs = 8640000

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled